name: E2E Tests

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.svg'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.svg'
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2
      - run: ./gradlew assembleUp

      - name: Docker IPs
        run: docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
      - name: Set E2E_APP_HOST
        run: E2E_APP_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=e2e-app")) && echo "E2E_APP_HOST=$E2E_APP_HOST" >> $GITHUB_ENV
      - name: Set SPP_PLATFORM_HOST
        run: SPP_PLATFORM_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=spp-platform")) && echo "SPP_PLATFORM_HOST=$SPP_PLATFORM_HOST" >> $GITHUB_ENV
      - name: Wait for platform
        run: until $(curl --output /dev/null --silent --fail http://localhost:5445/api/new-token?access_token=change-me); do printf '.'; sleep 5; done && SPP_JWT_TOKEN=$(curl http://localhost:5445/api/new-token?access_token=change-me) && echo "SPP_JWT_TOKEN=$SPP_JWT_TOKEN" >> $GITHUB_ENV
#      - name: Wait for skywalking
#        run: |
#          until $(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure --output /dev/null --silent --fail https://localhost:5445/health); do printf '.'; sleep 5; done

        #todo: use wait for skywalking (https://github.com/sourceplusplus/live-platform/issues/231)
      - run: sleep 30s

      - run: ./gradlew test -Dtest.profile=integration

      - run: ./gradlew composeLogs
        if: ${{ always() }}

      - name: Upload docker logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: docker-logs
          path: ./build/containers-logs
